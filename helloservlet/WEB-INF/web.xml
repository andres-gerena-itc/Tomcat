<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app version="3.0"
  xmlns="http://java.sun.com/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
 
  <!--Selecciono el archivo de apertura -->

   <welcome-file-list>
      <welcome-file>index.html</welcome-file>
   </welcome-file-list>

 
  <!-- To save as <CATALINA_HOME>\webapps\helloservlet\WEB-INF\web.xml -->


   <servlet>
      <servlet-name>HelloServlet</servlet-name>
      <servlet-class>mypkg.HelloServlet</servlet-class>
   </servlet>

   <servlet>
      <servlet-name>EchoServletExample</servlet-name>
      <servlet-class>mypkg.EchoServlet</servlet-class>
   </servlet>
 
   <!-- Note: All <servlet> elements MUST be grouped together and
         placed IN FRONT of the <servlet-mapping> elements -->
 
   <servlet-mapping>
      <servlet-name>HelloServlet</servlet-name>
      <url-pattern>/sayhello</url-pattern>
   </servlet-mapping>

   <servlet-mapping>
      <servlet-name>EchoServletExample</servlet-name>
      <url-pattern>/echo</url-pattern>
   </servlet-mapping>

 <servlet>
        <servlet-name>FirstServlet</servlet-name>
        <display-name>FirstServlet</display-name>
        <description>Test GET, POST methods of Servlet</description>
        <servlet-class>com.test.servlet.FirstServlet</servlet-class>
        <!--Un-comment  below line if you want to instantiate and initialize the servlet during the servlet-container(tomcat) startup-->
        <!-- <load-on-startup>1</load-on-startup> -->
  </servlet>

  <servlet-mapping>
        <servlet-name>FirstServlet</servlet-name>
        <url-pattern>/FirstServlet</url-pattern>
  </servlet-mapping>

        <servlet>
                <servlet-name>EnvironmentVariableServlet</servlet-name>
                <display-name>EnvironmentVariableServlet</display-name>
                <description>See environment variables</description>
                <servlet-class>com.test.servlet.EnvironmentVariableServlet</servlet-class>
                <!--Un-comment  below line if you want to instantiate and initialize the servlet during the servlet-container(tomcat) startup-->
                <!-- <load-on-startup>1</load-on-startup> -->
        </servlet>

        <servlet-mapping>
                <servlet-name>EnvironmentVariableServlet</servlet-name>
                <url-pattern>/environmentVariableServlet</url-pattern>
        </servlet-mapping>

        <servlet>
        <servlet-name>TestSessionServlet</servlet-name>
        <display-name>TestSessionServlet</display-name>
        <description>Test session</description>
        <servlet-class>com.test.servlet.TestSessionServlet</servlet-class>
        <!--Un-comment  below line if you want to instantiate and initialize the servlet during the servlet-container(tomcat) startup-->
        <!-- <load-on-startup>1</load-on-startup> -->
  </servlet>

<servlet-mapping>
        <servlet-name>TestSessionServlet</servlet-name>
        <url-pattern>/TestSessionServlet</url-pattern>
  </servlet-mapping>


  <servlet>
        <servlet-name>LogoutServlet</servlet-name>
        <display-name>LogoutServlet</display-name>
        <description>Logout from session</description>
        <servlet-class>com.test.servlet.LogoutServlet</servlet-class>
  </servlet>

  <servlet-mapping>
        <servlet-name>LogoutServlet</servlet-name>
        <url-pattern>/Logout</url-pattern>
  </servlet-mapping>

  <servlet>
        <servlet-name>TestDataPlaceHolderServlet</servlet-name>
        <display-name>TestDataPlaceHolderServlet</display-name>
        <description>Test data stored in request, session and servlet context</description>
        <servlet-class>com.test.servlet.TestDataPlaceHolderServlet</servlet-class>
  </servlet>


  <servlet-mapping>
        <servlet-name>TestDataPlaceHolderServlet</servlet-name>
        <url-pattern>/testDataPlaceHolderServlet</url-pattern>
  </servlet-mapping>



  <servlet>
        <servlet-name>DataPlaceHolderServlet</servlet-name>
        <display-name>DataPlaceHolderServlet</display-name>
        <description>Store data in request, session and servlet context</description>
        <servlet-class>com.test.servlet.DataPlaceHolderServlet</servlet-class>
  </servlet>

  <servlet-mapping>
        <servlet-name>DataPlaceHolderServlet</servlet-name>
        <url-pattern>/DataPlaceHolderServlet</url-pattern>
  </servlet-mapping>

</web-app>
